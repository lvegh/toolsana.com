const sharp=require("sharp"),imagemin=require("imagemin"),imageminPngquant=require("imagemin-pngquant"),imageminOptipng=require("imagemin-optipng"),imageminAdvpng=require("imagemin-advpng"),logger=require("../utils/logger");class PngOptimizer{constructor(){this.compressionStrategies={gradient:{quality:[.85,.95],speed:1,strip:!0,dithering:0,posterize:0},aggressive:{quality:[.65,.85],speed:1,strip:!0,dithering:1,posterize:0},ultraAggressive:{quality:[.5,.75],speed:1,strip:!0,dithering:1,posterize:0},balanced:{quality:[.7,.85],speed:3,strip:!0,dithering:.5,posterize:0}}}async analyzeImage(e){try{const t=await sharp(e).metadata(),i=await sharp(e).stats(),a=i.channels.some((e=>e.stdev<40)),n=i.channels.reduce(((e,t)=>e+(t.stdev||0)),0)/i.channels.length,s={width:t.width,height:t.height,channels:t.channels,hasAlpha:t.hasAlpha,isAnimated:t.pages&&t.pages>1,colorSpace:t.space,density:t.density,size:e.length,hasGradients:a,avgStdDev:n,uniqueColors:this.estimateUniqueColors(i),complexity:this.calculateComplexity(t,i)};return logger.info("PNG image analyzed",s),s}catch(e){throw logger.error("Failed to analyze PNG image",{error:e.message}),e}}estimateUniqueColors(e){if(!e.channels||0===e.channels.length)return 0;const t=e.channels.slice(0,3).reduce(((e,t)=>e+(t.max-t.min)),0)/3;return Math.min(Math.round(100*t),16777216)}calculateComplexity(e,t){let i=0;if(e.hasAlpha&&(i+=20),e.width*e.height>1e6&&(i+=20),t.channels&&t.channels.length>0){const e=t.channels.reduce(((e,t)=>e+(t.stdev||0)),0)/t.channels.length;i+=Math.min(e/2,30)}const a=this.estimateUniqueColors(t);return a>1e4?i+=20:a>1e3&&(i+=10),Math.min(i,100)}selectCompressionStrategy(e){return e.hasGradients?(logger.info("Gradient image detected, using gradient-safe strategy",{avgStdDev:e.avgStdDev}),"gradient"):e.size<1e4?(logger.info("Small image detected, using balanced strategy"),"balanced"):e.complexity<30||e.uniqueColors<256?(logger.info("Simple image detected, using ultra-aggressive strategy",{complexity:e.complexity,uniqueColors:e.uniqueColors}),"ultraAggressive"):e.complexity>70||e.hasAlpha?(logger.info("Complex image detected, using aggressive strategy",{complexity:e.complexity,hasAlpha:e.hasAlpha}),"aggressive"):(logger.info("Standard image detected, using aggressive strategy"),"aggressive")}async stripMetadata(e){try{const t=await sharp(e).withMetadata(!1).toBuffer(),i=e.length-t.length;return i>0&&logger.info("Metadata stripped",{bytesRemoved:i}),t}catch(t){return logger.warn("Failed to strip metadata",{error:t.message}),e}}async compress(e,t={}){const i=Date.now(),a=e.length;try{let t=await this.stripMetadata(e);const n=await this.analyzeImage(t);logger.info("Image analysis complete",{hasGradients:n.hasGradients,complexity:n.complexity,avgStdDev:n.avgStdDev,size:n.size});let s=t,r=t.length,g="original";const o=[];if(n.hasGradients){logger.info("Gradient detected - using quality-preserving compression");const e=await imagemin.buffer(t,{plugins:[imageminPngquant({quality:[.9,.98],speed:1,strip:!0,dithering:0,posterize:0})]}).catch((()=>t));let i=await imagemin.buffer(e,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((()=>e));i=await imagemin.buffer(i,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:20})]}).catch((()=>i)),o.push({strategy:"gradient-safe",size:i.length,buffer:i}),i.length<r&&(s=i,r=i.length,g="gradient-safe")}if(!n.hasGradients){logger.info("Applying TinyPNG-matched compression strategies");const e=[{quality:[.65,.8],dither:1,name:"tinypng-match-80"},{quality:[.6,.75],dither:1,name:"tinypng-match-75"},{quality:[.55,.7],dither:1,name:"tinypng-match-70"}];for(const i of e)try{let e=await imagemin.buffer(t,{plugins:[imageminPngquant({quality:i.quality,speed:1,strip:!0,dithering:i.dither,posterize:0})]});e=await imagemin.buffer(e,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((()=>e)),e=await imagemin.buffer(e,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:15})]}).catch((()=>e));const n=((a-e.length)/a*100).toFixed(1);o.push({strategy:i.name,size:e.length,buffer:e,ratio:parseFloat(n)}),logger.info(`${i.name}: ${e.length} bytes (${n}%)`),e.length<r&&(s=e,r=e.length,g=i.name)}catch(e){logger.warn(`Failed ${i.name}:`,e.message)}}const l=(a-r)/a*100;if(!n.hasGradients&&l<75&&a>1e5){logger.info("Applying smart color quantization (current: "+l.toFixed(1)+"%)");const t=[256,192,128];for(const i of t)try{let t=await sharp(e).png({palette:!0,quality:90,colors:i,dither:1,compressionLevel:9,adaptiveFiltering:!0,effort:10}).toBuffer();t=await imagemin.buffer(t,{plugins:[imageminPngquant({quality:[.85,.95],speed:1,strip:!0,dithering:.3})]}).catch((()=>t)),t=await imagemin.buffer(t,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((()=>t)),t=await imagemin.buffer(t,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:15})]}).catch((()=>t));const n=((a-t.length)/a*100).toFixed(1);o.push({strategy:`quantized-${i}`,size:t.length,buffer:t,ratio:parseFloat(n)}),logger.info(`quantized-${i}: ${t.length} bytes (${n}%)`),t.length<r&&parseFloat(n)<=80&&(s=t,r=t.length,g=`quantized-${i}`)}catch(e){logger.warn(`Quantization ${i} colors failed:`,e.message)}}const p=(a-r)/a*100;if(!n.hasGradients&&p<76&&p>70){logger.info("Applying final optimization pass to reach target (current: "+p.toFixed(1)+"%)");try{let t=await imagemin.buffer(e,{plugins:[imageminPngquant({quality:[.58,.72],speed:1,strip:!0,dithering:1,posterize:0})]});t=await imagemin.buffer(t,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((()=>t)),t=await imagemin.buffer(t,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:20})]}).catch((()=>t));const i=((a-t.length)/a*100).toFixed(1);o.push({strategy:"final-optimization",size:t.length,buffer:t,ratio:parseFloat(i)}),logger.info(`final-optimization: ${t.length} bytes (${i}%)`),t.length<r&&parseFloat(i)<=82&&(s=t,r=t.length,g="final-optimization")}catch(e){logger.warn("Final optimization failed:",e.message)}}const m=r,c=((a-m)/a*100).toFixed(1),h=Date.now()-i,d=o.map((e=>({strategy:e.strategy,size:e.size,sizeKB:(e.size/1024).toFixed(2)+" KB",ratio:((a-e.size)/a*100).toFixed(1)+"%"}))).sort(((e,t)=>parseFloat(t.ratio)-parseFloat(e.ratio)));return logger.info("All compression attempts (sorted by ratio):",d),logger.info("PNG compression completed",{originalSize:(a/1024).toFixed(2)+" KB",finalSize:(m/1024).toFixed(2)+" KB",compressionRatio:`${c}%`,strategy:g,processingTime:`${h}ms`,tinypngTarget:"78% (475 KB)",status:parseFloat(c)>=78?"✓ BEAT TINYPNG":parseFloat(c)>=75?"≈ CLOSE TO TINYPNG":"✗ BELOW TARGET"}),{buffer:s,originalSize:a,compressedSize:m,compressionRatio:c,strategy:g,analysis:n,allAttempts:d}}catch(t){logger.error("PNG compression failed completely",{error:t.message,stack:t.stack});const i=await sharp(e).png({compressionLevel:9,adaptiveFiltering:!0,palette:!0,quality:80,effort:10,colors:192}).toBuffer();return{buffer:i,originalSize:a,compressedSize:i.length,compressionRatio:((a-i.length)/a*100).toFixed(1),strategy:"fallback-sharp",analysis:null}}}}module.exports=new PngOptimizer;