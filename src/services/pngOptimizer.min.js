const sharp=require("sharp"),imagemin=require("imagemin"),imageminPngquant=require("imagemin-pngquant"),imageminOptipng=require("imagemin-optipng"),imageminAdvpng=require("imagemin-advpng"),logger=require("../utils/logger");class PngOptimizer{constructor(){this.compressionStrategies={gradient:{quality:[.85,.95],speed:1,strip:!0,dithering:0,posterize:0},aggressive:{quality:[.65,.85],speed:1,strip:!0,dithering:1,posterize:0},ultraAggressive:{quality:[.5,.75],speed:1,strip:!0,dithering:1,posterize:0},balanced:{quality:[.7,.85],speed:3,strip:!0,dithering:.5,posterize:0}}}async analyzeImage(e){try{const i=await sharp(e).metadata(),t=await sharp(e).stats(),a=t.channels.some((e=>e.stdev<40)),n=t.channels.reduce(((e,i)=>e+(i.stdev||0)),0)/t.channels.length,s={width:i.width,height:i.height,channels:i.channels,hasAlpha:i.hasAlpha,isAnimated:i.pages&&i.pages>1,colorSpace:i.space,density:i.density,size:e.length,hasGradients:a,avgStdDev:n,uniqueColors:this.estimateUniqueColors(t),complexity:this.calculateComplexity(i,t)};return logger.info("PNG image analyzed",s),s}catch(e){throw logger.error("Failed to analyze PNG image",{error:e.message}),e}}estimateUniqueColors(e){if(!e.channels||0===e.channels.length)return 0;const i=e.channels.slice(0,3).reduce(((e,i)=>e+(i.max-i.min)),0)/3;return Math.min(Math.round(100*i),16777216)}calculateComplexity(e,i){let t=0;if(e.hasAlpha&&(t+=20),e.width*e.height>1e6&&(t+=20),i.channels&&i.channels.length>0){const e=i.channels.reduce(((e,i)=>e+(i.stdev||0)),0)/i.channels.length;t+=Math.min(e/2,30)}const a=this.estimateUniqueColors(i);return a>1e4?t+=20:a>1e3&&(t+=10),Math.min(t,100)}selectCompressionStrategy(e){return e.hasGradients?(logger.info("Gradient image detected, using gradient-safe strategy",{avgStdDev:e.avgStdDev}),"gradient"):e.size<1e4?(logger.info("Small image detected, using balanced strategy"),"balanced"):e.complexity<30||e.uniqueColors<256?(logger.info("Simple image detected, using ultra-aggressive strategy",{complexity:e.complexity,uniqueColors:e.uniqueColors}),"ultraAggressive"):e.complexity>70||e.hasAlpha?(logger.info("Complex image detected, using aggressive strategy",{complexity:e.complexity,hasAlpha:e.hasAlpha}),"aggressive"):(logger.info("Standard image detected, using aggressive strategy"),"aggressive")}async stripMetadata(e){try{const i=await sharp(e).withMetadata(!1).toBuffer(),t=e.length-i.length;return t>0&&logger.info("Metadata stripped",{bytesRemoved:t}),i}catch(i){return logger.warn("Failed to strip metadata",{error:i.message}),e}}async compress(e,i={}){Date.now();const t=e.length;try{let i=await this.stripMetadata(e);const a=await this.analyzeImage(i);if(a.hasGradients){let e=await imagemin.buffer(i,{plugins:[imageminPngquant({quality:[.9,.98],speed:1,strip:!0,dithering:0})]}).catch((()=>i));return e=await imagemin.buffer(e,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((()=>e)),e=await imagemin.buffer(e,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:20})]}).catch((()=>e)),{buffer:e,originalSize:t,compressedSize:e.length,compressionRatio:((t-e.length)/t*100).toFixed(1),strategy:"gradient-safe",analysis:a}}const n=[.5,.7];logger.info("Compressing with quality:",n);let s=await imagemin.buffer(i,{plugins:[imageminPngquant({quality:n,speed:1,strip:!0,dithering:1})]}).catch((()=>i));s=await imagemin.buffer(s,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((()=>s)),s=await imagemin.buffer(s,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:15})]}).catch((()=>s));const r=((t-s.length)/t*100).toFixed(1);return logger.info("Result:",{originalSize:(t/1024).toFixed(2)+" KB",finalSize:(s.length/1024).toFixed(2)+" KB",compressionRatio:r+"%",quality:n}),{buffer:s,originalSize:t,compressedSize:s.length,compressionRatio:r,strategy:`quality-${n.join("-")}`,analysis:a}}catch(i){logger.error("Compression failed:",i);const a=await sharp(e).png({compressionLevel:9,adaptiveFiltering:!0,palette:!0,quality:75,effort:10,colors:192}).toBuffer();return{buffer:a,originalSize:t,compressedSize:a.length,compressionRatio:((t-a.length)/t*100).toFixed(1),strategy:"fallback-sharp",analysis:null}}}}module.exports=new PngOptimizer;