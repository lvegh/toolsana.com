const sharp=require("sharp"),imagemin=require("imagemin"),imageminPngquant=require("imagemin-pngquant"),imageminOptipng=require("imagemin-optipng"),imageminAdvpng=require("imagemin-advpng"),logger=require("../utils/logger");class PngOptimizer{constructor(){this.compressionStrategies={gradient:{quality:[.85,.95],speed:1,strip:!0,dithering:0,posterize:0},aggressive:{quality:[.65,.85],speed:1,strip:!0,dithering:1,posterize:0},ultraAggressive:{quality:[.5,.75],speed:1,strip:!0,dithering:1,posterize:0},balanced:{quality:[.7,.85],speed:3,strip:!0,dithering:.5,posterize:0}}}async analyzeImage(e){try{const t=await sharp(e).metadata(),i=await sharp(e).stats(),a=i.channels.some((e=>e.stdev<40)),n=i.channels.reduce(((e,t)=>e+(t.stdev||0)),0)/i.channels.length,s={width:t.width,height:t.height,channels:t.channels,hasAlpha:t.hasAlpha,isAnimated:t.pages&&t.pages>1,colorSpace:t.space,density:t.density,size:e.length,hasGradients:a,avgStdDev:n,uniqueColors:this.estimateUniqueColors(i),complexity:this.calculateComplexity(t,i)};return logger.info("PNG image analyzed",s),s}catch(e){throw logger.error("Failed to analyze PNG image",{error:e.message}),e}}estimateUniqueColors(e){if(!e.channels||0===e.channels.length)return 0;const t=e.channels.slice(0,3).reduce(((e,t)=>e+(t.max-t.min)),0)/3;return Math.min(Math.round(100*t),16777216)}calculateComplexity(e,t){let i=0;if(e.hasAlpha&&(i+=20),e.width*e.height>1e6&&(i+=20),t.channels&&t.channels.length>0){const e=t.channels.reduce(((e,t)=>e+(t.stdev||0)),0)/t.channels.length;i+=Math.min(e/2,30)}const a=this.estimateUniqueColors(t);return a>1e4?i+=20:a>1e3&&(i+=10),Math.min(i,100)}selectCompressionStrategy(e){return e.hasGradients?(logger.info("Gradient image detected, using gradient-safe strategy",{avgStdDev:e.avgStdDev}),"gradient"):e.size<1e4?(logger.info("Small image detected, using balanced strategy"),"balanced"):e.complexity<30||e.uniqueColors<256?(logger.info("Simple image detected, using ultra-aggressive strategy",{complexity:e.complexity,uniqueColors:e.uniqueColors}),"ultraAggressive"):e.complexity>70||e.hasAlpha?(logger.info("Complex image detected, using aggressive strategy",{complexity:e.complexity,hasAlpha:e.hasAlpha}),"aggressive"):(logger.info("Standard image detected, using aggressive strategy"),"aggressive")}async stripMetadata(e){try{const t=await sharp(e).withMetadata(!1).toBuffer(),i=e.length-t.length;return i>0&&logger.info("Metadata stripped",{bytesRemoved:i}),t}catch(t){return logger.warn("Failed to strip metadata",{error:t.message}),e}}async compress(e,t={}){const i=Date.now(),a=e.length;try{let t=await this.stripMetadata(e);const n=await this.analyzeImage(t),s=this.selectCompressionStrategy(n),r=this.compressionStrategies[s];logger.info("Selected compression strategy",{strategy:s,settings:r}),logger.info("Step 1: Applying pngquant compression");const g=await imagemin.buffer(t,{plugins:[imageminPngquant({quality:r.quality,speed:r.speed,strip:r.strip,dithering:r.dithering,posterize:r.posterize})]}).catch((e=>(logger.warn("Pngquant failed",{error:e.message}),t)));if(g.length<t.length){const e=((t.length-g.length)/t.length*100).toFixed(1);logger.info("Pngquant reduced size",{before:t.length,after:g.length,reduction:`${e}%`}),t=g}logger.info("Step 2: Applying OptiPNG optimization");const o=await imagemin.buffer(t,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((e=>(logger.warn("OptiPNG failed",{error:e.message}),t)));if(o.length<t.length){const e=((t.length-o.length)/t.length*100).toFixed(1);logger.info("OptiPNG reduced size",{before:t.length,after:o.length,reduction:`${e}%`}),t=o}logger.info("Step 3: Applying AdvPNG optimization");const l=await imagemin.buffer(t,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:15})]}).catch((e=>(logger.warn("AdvPNG failed",{error:e.message}),t)));if(l.length<t.length){const e=((t.length-l.length)/t.length*100).toFixed(1);logger.info("AdvPNG reduced size",{before:t.length,after:l.length,reduction:`${e}%`}),t=l}const p=(a-t.length)/a*100;if(!n.hasGradients&&p<70&&a>5e4){logger.info("Step 4: Trying ultra-aggressive compression (ratio: "+p.toFixed(1)+"%)");let i=await imagemin.buffer(e,{plugins:[imageminPngquant({quality:[.4,.65],speed:1,strip:!0,dithering:1,posterize:0})]}).catch((()=>t));if(i=await imagemin.buffer(i,{plugins:[imageminOptipng({optimizationLevel:2})]}).catch((()=>i)),i=await imagemin.buffer(i,{plugins:[imageminAdvpng({optimizationLevel:4,iterations:15})]}).catch((()=>i)),i.length<t.length){const e=((t.length-i.length)/t.length*100).toFixed(1);logger.info("Ultra-aggressive compression improved results",{improvement:`${e}%`,finalRatio:((a-i.length)/a*100).toFixed(1)+"%"}),t=i}}const h=t.length,m=((a-h)/a*100).toFixed(1),c=Date.now()-i;return logger.info("PNG compression completed",{originalSize:a,finalSize:h,compressionRatio:`${m}%`,strategy:s,processingTime:`${c}ms`}),{buffer:t,originalSize:a,compressedSize:h,compressionRatio:m,strategy:s,analysis:n}}catch(t){logger.error("PNG compression failed, using Sharp fallback",{error:t.message,stack:t.stack});const i=await sharp(e).png({compressionLevel:9,adaptiveFiltering:!0,palette:!0,quality:80,effort:10}).toBuffer();return{buffer:i,originalSize:a,compressedSize:i.length,compressionRatio:((a-i.length)/a*100).toFixed(1),strategy:"fallback-sharp",analysis:null}}}}module.exports=new PngOptimizer;